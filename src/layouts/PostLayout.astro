---
import type { CollectionEntry } from 'astro:content';
import type { LinkData } from '../types';
import Layout from './Layout.astro';
import { LinkList } from '../components/LinkList';
import { getEntries } from 'astro:content';

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { title, tags } = post.data;
const authors = await getEntries(post.data.authors)

const tagLinks: LinkData[] = tags.map((t) => {
  return {
    title: `#${t}`,
    url: `#${t}`
  }
})

const authorLinks: LinkData[] = authors.map((a) => {
  return {
    title: a.data.name,
    url: `#${a.data.id}`
  }
})
---

<Layout title={title} header={{}}>
  <main class="mt-20 p-4 mx-auto max-w-screen-md">
    <article class="text-black dark:text-white mb-6">
      <div class="mb-6">
        <h1 class="text-4xl font-bold">{title}</h1>
        <p class="text-md text-gray-400 mt-1">
          Published: {post.data.published.toISOString().slice(0,10)}
          { post.data.updated  && ` | Updated: ${post.data.updated.toISOString().slice(0,10)}` }
        </p>
        <div class="flex justify-between text-md md:text-md">
          <LinkList links={authorLinks} containerClasses={["mt-4"]}/>
          <LinkList links={tagLinks} containerClasses={["mt-4"]}/>
        </div>
      </div>
      <slot />
    </article>
  </main>
</Layout>