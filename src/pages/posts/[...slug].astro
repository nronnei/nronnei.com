---
import { getCollection, render } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
import Prose from '../../components/Prose.astro';

export async function getStaticPaths() {
    const posts = await getCollection('posts');
    return posts.map((post) => ({ params: { slug: post.id }, props: { post } }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<PostLayout post={post}>
    <Prose>
        <Content post={post}/>
    </Prose>
    <script>
        async function renderDiagrams(graphs: HTMLCollectionOf<Element>) {
         const {default: mermaid} = await import("mermaid")
         mermaid.initialize({
           startOnLoad: false,
           theme: window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "default",
         })
   
         for (const graph of graphs) {
           const content = graph.getAttribute("data-content")
           if (!content) continue
           let svg = document.createElement("svg")
           const id = (svg.id = "mermaid-" + Math.round(Math.random() * 100000))
           graph.appendChild(svg)
           mermaid.render(id, content).then(result => {
             graph.innerHTML = result.svg
           })
         }
       }

       const graphs = document.getElementsByClassName("mermaid")
       if (document.getElementsByClassName("mermaid").length > 0) {
         renderDiagrams(graphs);
       }
     </script>
</PostLayout>